[include mainsail.cfg]
[include steppers.cfg]
[include macros.cfg]
[include heaters.cfg]
[include fan.cfg]
[include klicky-probe.cfg]
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1B0050000951313133353932-if00

[printer]
kinematics: corexy
max_velocity: 1500
max_accel: 30000
max_accel_to_decel: 15000
max_z_velocity: 20
max_z_accel: 300
square_corner_velocity: 15

#   seconds.

#[safe_z_home]
#home_xy_position: 150, 150
#speed: 1000
#z_hop:5
#z_hop_speed: 15.0

[adxl345]
cs_pin: PA15
spi_bus: spi3

#[input_shaper]
#shaper_freq_x: 117
#shaper_freq_y: 66.8
#shaper_type: zv


[resonance_tester]
accel_chip: adxl345
probe_points:
    150,150,200

[probe]
pin:PG11
#   Probe detection pin. If the pin is on a different microcontroller
#   than the Z steppers then it enables "multi-mcu homing". This
#   parameter must be provided.
#deactivate_on_each_sample: True
#   This determines if Klipper should execute deactivation gcode
#   between each probe attempt when performing a multiple probe
#   sequence. The default is True.
x_offset: 0.0
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: 10
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
#z_offset: 3
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
speed: 10
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 3
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
#sample_retract_dist: 2.0
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
#lift_speed:
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples. The default is to use the same value as the 'speed'
#   parameter.
#samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
#samples_tolerance: 0.100
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
#samples_tolerance_retries: 0
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.
#activate_gcode:
#   A list of G-Code commands to execute prior to each probe attempt.
#   See docs/Command_Templates.md for G-Code format. This may be
#   useful if the probe needs to be activated in some way. Do not
#   issue any commands here that move the toolhead (eg, G1). The
#   default is to not run any special G-Code commands on activation.
#deactivate_gcode:
#   A list of G-Code commands to execute after each probe attempt
#   completes. See docs/Command_Templates.md for G-Code format. Do not
#   issue any commands here that move the toolhead. The default is to
#   not run any special G-Code commands on deactivation.

[servo klicky_servo]
pin: PB6
initial_angle: 5
maximum_servo_angle: 180
minimum_pulse_width: 0.001
maximum_pulse_width: 0.002

[bed_mesh]
speed: 150
horizontal_move_z: 5
mesh_min: 20,55
mesh_max: 300, 300
probe_count: 5, 5

[screws_tilt_adjust]
screw1: 20, 300
screw1_name: front left screw
screw2: 300, 300
screw2_name: front right screw
screw3: 300, 40
screw3_name: rear right screw
screw4: 20, 40
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 200
screw_thread: CW-M4

[output_pin LED]
pin: PG10
#   The pin to configure as an output. This parameter must be
#   provided.
#pwm: False
#   Set if the output pin should be capable of pulse-width-modulation.
#   If this is true, the value fields should be between 0 and 1; if it
#   is false the value fields should be either 0 or 1. The default is
#   False.
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime. A static pin uses
#   slightly less ram in the micro-controller. The default is to use
#   runtime configuration of pins.
#value:
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
#shutdown_value:
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
#maximum_mcu_duration:
#   The maximum duration a non-shutdown value may be driven by the MCU
#   without an acknowledge from the host.
#   If host can not keep up with an update, the MCU will shutdown
#   and set all pins to their respective shutdown values.
#   Default: 0 (disabled)
#   Usual values are around 5 seconds.
#cycle_time: 0.100
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.100 seconds for pwm pins.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.310833, 0.139167, -0.012500, -0.046667, -0.054167
#*# 	0.228333, 0.074167, -0.026667, -0.047500, -0.034167
#*# 	0.139167, 0.100000, -0.036667, -0.030833, 0.045833
#*# 	0.007500, -0.084167, -0.113333, -0.020000, 0.070833
#*# 	-0.161667, -0.240000, -0.214167, -0.057500, 0.068333
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 300.0
#*# min_y = 55.0
#*# max_y = 300.0
#*#
#*# [probe]
#*# z_offset = 2.280


